{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Prismic from 'prismic-javascript';\nimport { PRISMIC_API_URL } from '../config';\n\nvar getBlogPostsAPI =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(params) {\n    var API, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return Prismic.api(PRISMIC_API_URL);\n\n          case 3:\n            API = _context.sent;\n            _context.next = 6;\n            return API.query(Prismic.Predicates.at('document.type', 'blog_post'), _objectSpread({\n              orderings: '[my.blog_post.date desc]'\n            }, params));\n\n          case 6:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", _context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function getBlogPostsAPI(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // ... previous code above ...\n\n\nvar getBlogPostAPI =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(slug) {\n    var API, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return Prismic.api(PRISMIC_API_URL);\n\n          case 3:\n            API = _context2.sent;\n            _context2.next = 6;\n            return API.query(Prismic.Predicates.at('my.blog_post.uid', slug));\n\n          case 6:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.results[0]);\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n            return _context2.abrupt(\"return\", _context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 10]]);\n  }));\n\n  return function getBlogPostAPI(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // Don't forget to export newly created function\n\n\nexport { getBlogPostsAPI, getBlogPostAPI };","map":{"version":3,"sources":["/Users/mohamad/Documents/project/test/api/index.js"],"names":["Prismic","PRISMIC_API_URL","getBlogPostsAPI","params","api","API","query","Predicates","at","orderings","response","getBlogPostAPI","slug","results","console","error"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,SAASC,eAAT,QAAgC,WAAhC;;AAEA,IAAMC,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGEH,OAAO,CAACI,GAAR,CAAYH,eAAZ,CAHF;;AAAA;AAGVI,YAAAA,GAHU;AAAA;AAAA,mBAOOA,GAAG,CAACC,KAAJ,CACnBN,OAAO,CAACO,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,WAAvC,CADmB;AAGfC,cAAAA,SAAS,EAAE;AAHI,eAIZN,MAJY,EAPP;;AAAA;AAOVO,YAAAA,QAPU;AAAA,6CAgBTA,QAhBS;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfR,eAAe;AAAA;AAAA;AAAA,GAArB,C,CAsBA;;;AAEA,IAAMS,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEGZ,OAAO,CAACI,GAAR,CAAYH,eAAZ,CAFH;;AAAA;AAETI,YAAAA,GAFS;AAAA;AAAA,mBAIQA,GAAG,CAACC,KAAJ,CACnBN,OAAO,CAACO,UAAR,CAAmBC,EAAnB,CAAsB,kBAAtB,EAA0CI,IAA1C,CADmB,CAJR;;AAAA;AAITF,YAAAA,QAJS;AAAA,8CAORA,QAAQ,CAACG,OAAT,CAAiB,CAAjB,CAPQ;;AAAA;AAAA;AAAA;AASfC,YAAAA,OAAO,CAACC,KAAR;AATe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdJ,cAAc;AAAA;AAAA;AAAA,GAApB,C,CAcA;;;AACA,SAAST,eAAT,EAA0BS,cAA1B","sourcesContent":["import Prismic from 'prismic-javascript';\nimport { PRISMIC_API_URL } from '../config';\n\nconst getBlogPostsAPI = async params => {\n    try {\n        // We initialise the API with Prismic's kit\n        const API = await Prismic.api(PRISMIC_API_URL);\n        // Here we just query the documents with a filter of only returning\n        // the type of blog_post and order them. Full docs can be found here:\n        // https://github.com/prismicio/prismic-javascript#query-the-content\n        const response = await API.query(\n            Prismic.Predicates.at('document.type', 'blog_post'),\n            {\n                orderings: '[my.blog_post.date desc]',\n                ...params\n                // params will be extra parameters we can pass through with api calls\n                // such as how many documents to return\n            }\n        );\n        return response;\n    } catch (error) {\n        return error;\n    }\n};\n\n// ... previous code above ...\n\nconst getBlogPostAPI = async slug => {\n    try {\n        const API = await Prismic.api(PRISMIC_API_URL);\n        // we pass up the slug to request the correct post\n        const response = await API.query(\n            Prismic.Predicates.at('my.blog_post.uid', slug)\n        );\n        return response.results[0];\n    } catch (error) {\n        console.error(error);\n        return error;\n    }\n};\n\n// Don't forget to export newly created function\nexport { getBlogPostsAPI, getBlogPostAPI };\n"]},"metadata":{},"sourceType":"module"}