{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport { RichText } from 'prismic-reactjs';\nimport { getBlogPostAPI } from '../api';\nimport linkResolver from '../helpers';\nimport DefaultLayout from '../layout';\nimport Head from 'next/head';\n\nvar BlogPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BlogPost, _Component);\n\n  function BlogPost() {\n    _classCallCheck(this, BlogPost);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BlogPost).apply(this, arguments));\n  }\n\n  _createClass(BlogPost, [{\n    key: \"addJSONLD\",\n    // we have added a new function to return the JSON-LD\n    value: function addJSONLD(post, info, url) {\n      return {\n        __html: \"{\\n      \\\"@context\\\": \\\"http://schema.org\\\",\\n      \\\"@type\\\": \\\"BlogPosting\\\",\\n      \\\"mainEntityOfPage\\\": {\\n        \\\"@type\\\": \\\"WebPage\\\",\\n        \\\"@id\\\": \\\"\".concat(url, \"\\\"\\n      },\\n      \\\"headline\\\": \\\"\").concat(post.og_title[0].text, \"\\\",\\n      \\\"image\\\": [\\n        \\\"\").concat(post.og_image.url, \"\\\"\\n      ],\\n      \\\"datePublished\\\": \\\"\").concat(info.first_publication_date, \"\\\",\\n      \\\"dateModified\\\": \\\"\").concat(info.first_publication_date, \"\\\",\\n      \\\"author\\\": {\\n        \\\"@type\\\": \\\"Person\\\",\\n        \\\"name\\\": \\\"Gary Meehan\\\"\\n      },\\n      \\\"publisher\\\": {\\n        \\\"@type\\\": \\\"Organization\\\",\\n        \\\"name\\\": \\\"Gary Meehan\\\",\\n        \\\"logo\\\": {\\n          \\\"@type\\\": \\\"ImageObject\\\",\\n          \\\"url\\\": \\\"https://prismic-io.s3.amazonaws.com/gary-blog%2Fa64f6d7e-5c0e-4190-b852-2122e087ae2b_gm.jpg\\\"\\n        }\\n      },\\n      \\\"description\\\": \\\"\").concat(post.og_description[0].text, \"\\\"\\n    }\")\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var post = this.props.post.data; // we are creating two new variables here\n\n      var info = this.props.post;\n      var url = \"https://www.yourdomain.ie/blog/\".concat(info.uid);\n      return React.createElement(DefaultLayout, null, React.createElement(Head, null, React.createElement(Head, null, React.createElement(\"title\", {\n        key: \"title\"\n      }, post.og_title[0].text), React.createElement(\"meta\", {\n        key: \"description\",\n        name: \"description\",\n        content: post.og_description[0].text\n      }), React.createElement(\"meta\", {\n        key: \"og:url\",\n        property: \"og:url\",\n        content: url\n      }), React.createElement(\"meta\", {\n        key: \"og:type\",\n        property: \"og:type\",\n        content: \"article\"\n      }), React.createElement(\"meta\", {\n        key: \"og:title\",\n        property: \"og:title\",\n        content: post.og_title[0].text\n      }), React.createElement(\"meta\", {\n        key: \"og:description\",\n        property: \"og:description\",\n        content: post.og_description[0].text\n      }), React.createElement(\"meta\", {\n        key: \"og:image\",\n        property: \"og:image\",\n        content: post.og_image.url\n      }))), React.createElement(\"article\", null, React.createElement(\"h1\", null, post.title.length ? post.title[0].text : ''), RichText.render(post.body, linkResolver)), React.createElement(\"script\", {\n        type: \"application/ld+json\",\n        dangerouslySetInnerHTML: this.addJSONLD(post, info, url)\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(context) {\n        var slug, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                slug = context.query.slug;\n                _context.next = 3;\n                return getBlogPostAPI(slug);\n\n              case 3:\n                response = _context.sent;\n                return _context.abrupt(\"return\", {\n                  post: response\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return BlogPost;\n}(Component);\n\nexport { BlogPost as default };","map":{"version":3,"sources":["/Users/mohamad/Documents/project/test/pages/blogPost.js"],"names":["React","Component","RichText","getBlogPostAPI","linkResolver","DefaultLayout","Head","BlogPost","post","info","url","__html","og_title","text","og_image","first_publication_date","og_description","props","data","uid","title","length","render","body","addJSONLD","context","slug","query","response"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,OAAOC,YAAP,MAAyB,YAAzB;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEqBC,Q;;;;;;;;;;;;;AAQjB;8BACUC,I,EAAMC,I,EAAMC,G,EAAK;AACvB,aAAO;AACHC,QAAAA,MAAM,iLAKAD,GALA,iDAOGF,IAAI,CAACI,QAAL,CAAc,CAAd,EAAiBC,IAPpB,gDASPL,IAAI,CAACM,QAAL,CAAcJ,GATP,sDAWQD,IAAI,CAACM,sBAXb,4CAYON,IAAI,CAACM,sBAZZ,obAyBMP,IAAI,CAACQ,cAAL,CAAoB,CAApB,EAAuBH,IAzB7B;AADH,OAAP;AA6BH;;;6BAEQ;AACL,UAAML,IAAI,GAAG,KAAKS,KAAL,CAAWT,IAAX,CAAgBU,IAA7B,CADK,CAEL;;AACA,UAAMT,IAAI,GAAG,KAAKQ,KAAL,CAAWT,IAAxB;AACA,UAAME,GAAG,4CAAqCD,IAAI,CAACU,GAA1C,CAAT;AAEA,aACI,oBAAC,aAAD,QACI,oBAAC,IAAD,QACI,oBAAC,IAAD,QACI;AAAO,QAAA,GAAG,EAAC;AAAX,SAAoBX,IAAI,CAACI,QAAL,CAAc,CAAd,EAAiBC,IAArC,CADJ,EAEI;AACI,QAAA,GAAG,EAAC,aADR;AAEI,QAAA,IAAI,EAAC,aAFT;AAGI,QAAA,OAAO,EAAEL,IAAI,CAACQ,cAAL,CAAoB,CAApB,EAAuBH;AAHpC,QAFJ,EAOI;AAAM,QAAA,GAAG,EAAC,QAAV;AAAmB,QAAA,QAAQ,EAAC,QAA5B;AAAqC,QAAA,OAAO,EAAEH;AAA9C,QAPJ,EAQI;AAAM,QAAA,GAAG,EAAC,SAAV;AAAoB,QAAA,QAAQ,EAAC,SAA7B;AAAuC,QAAA,OAAO,EAAC;AAA/C,QARJ,EASI;AAAM,QAAA,GAAG,EAAC,UAAV;AAAqB,QAAA,QAAQ,EAAC,UAA9B;AAAyC,QAAA,OAAO,EAAEF,IAAI,CAACI,QAAL,CAAc,CAAd,EAAiBC;AAAnE,QATJ,EAUI;AACI,QAAA,GAAG,EAAC,gBADR;AAEI,QAAA,QAAQ,EAAC,gBAFb;AAGI,QAAA,OAAO,EAAEL,IAAI,CAACQ,cAAL,CAAoB,CAApB,EAAuBH;AAHpC,QAVJ,EAeI;AAAM,QAAA,GAAG,EAAC,UAAV;AAAqB,QAAA,QAAQ,EAAC,UAA9B;AAAyC,QAAA,OAAO,EAAEL,IAAI,CAACM,QAAL,CAAcJ;AAAhE,QAfJ,CADJ,CADJ,EAoBI,qCACI,gCAAKF,IAAI,CAACY,KAAL,CAAWC,MAAX,GAAoBb,IAAI,CAACY,KAAL,CAAW,CAAX,EAAcP,IAAlC,GAAyC,EAA9C,CADJ,EAEKX,QAAQ,CAACoB,MAAT,CAAgBd,IAAI,CAACe,IAArB,EAA2BnB,YAA3B,CAFL,CApBJ,EAyBI;AACI,QAAA,IAAI,EAAC,qBADT;AAEI,QAAA,uBAAuB,EAAE,KAAKoB,SAAL,CAAehB,IAAf,EAAqBC,IAArB,EAA2BC,GAA3B;AAF7B,QAzBJ,CADJ;AAgCH;;;;;;gDA9E4Be,O;;;;;;AACjBC,gBAAAA,I,GAASD,OAAO,CAACE,K,CAAjBD,I;;uBACevB,cAAc,CAACuB,IAAD,C;;;AAA/BE,gBAAAA,Q;iDACC;AACHpB,kBAAAA,IAAI,EAAEoB;AADH,iB;;;;;;;;;;;;;;;;;;;EAJuB3B,S;;SAAjBM,Q","sourcesContent":["import React, { Component } from 'react';\nimport { RichText } from 'prismic-reactjs';\nimport { getBlogPostAPI } from '../api';\nimport linkResolver from '../helpers';\nimport DefaultLayout from '../layout';\nimport Head from 'next/head';\n\nexport default class BlogPost extends Component {\n    static async getInitialProps(context) {\n        const { slug } = context.query;\n        const response = await getBlogPostAPI(slug);\n        return {\n            post: response\n        };\n    }\n    // we have added a new function to return the JSON-LD\n    addJSONLD(post, info, url) {\n        return {\n            __html: `{\n      \"@context\": \"http://schema.org\",\n      \"@type\": \"BlogPosting\",\n      \"mainEntityOfPage\": {\n        \"@type\": \"WebPage\",\n        \"@id\": \"${url}\"\n      },\n      \"headline\": \"${post.og_title[0].text}\",\n      \"image\": [\n        \"${post.og_image.url}\"\n      ],\n      \"datePublished\": \"${info.first_publication_date}\",\n      \"dateModified\": \"${info.first_publication_date}\",\n      \"author\": {\n        \"@type\": \"Person\",\n        \"name\": \"Gary Meehan\"\n      },\n      \"publisher\": {\n        \"@type\": \"Organization\",\n        \"name\": \"Gary Meehan\",\n        \"logo\": {\n          \"@type\": \"ImageObject\",\n          \"url\": \"https://prismic-io.s3.amazonaws.com/gary-blog%2Fa64f6d7e-5c0e-4190-b852-2122e087ae2b_gm.jpg\"\n        }\n      },\n      \"description\": \"${post.og_description[0].text}\"\n    }`\n        };\n    }\n\n    render() {\n        const post = this.props.post.data;\n        // we are creating two new variables here\n        const info = this.props.post;\n        const url = `https://www.yourdomain.ie/blog/${info.uid}`;\n\n        return (\n            <DefaultLayout>\n                <Head>\n                    <Head>\n                        <title key=\"title\">{post.og_title[0].text}</title>\n                        <meta\n                            key=\"description\"\n                            name=\"description\"\n                            content={post.og_description[0].text}\n                        />\n                        <meta key=\"og:url\" property=\"og:url\" content={url} />\n                        <meta key=\"og:type\" property=\"og:type\" content=\"article\" />\n                        <meta key=\"og:title\" property=\"og:title\" content={post.og_title[0].text} />\n                        <meta\n                            key=\"og:description\"\n                            property=\"og:description\"\n                            content={post.og_description[0].text}\n                        />\n                        <meta key=\"og:image\" property=\"og:image\" content={post.og_image.url} />\n                    </Head>\n                </Head>\n                <article>\n                    <h1>{post.title.length ? post.title[0].text : ''}</h1>\n                    {RichText.render(post.body, linkResolver)}\n                </article>\n                {/* here we inject the JSON-LD from the function into a script tag  */}\n                <script\n                    type=\"application/ld+json\"\n                    dangerouslySetInnerHTML={this.addJSONLD(post, info, url)}\n                />\n            </DefaultLayout>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}